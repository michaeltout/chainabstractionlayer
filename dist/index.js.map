{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/verus-js-wallet-provider/./lib/VerusJsWalletProvider.ts","webpack://@liquality/verus-js-wallet-provider/./lib/index.ts","webpack://@liquality/verus-js-wallet-provider/external commonjs \"@bitgo/utxo-lib\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"@liquality/types\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"@liquality/verus-wallet-provider\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"@liquality/wallet-provider\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"bip32\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"bip39\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"bitcoinjs-lib\"","webpack://@liquality/verus-js-wallet-provider/external commonjs \"bitcoinjs-message\"","webpack://@liquality/verus-js-wallet-provider/webpack/bootstrap","webpack://@liquality/verus-js-wallet-provider/webpack/startup"],"sourcesContent":["import { VerusWalletProvider } from '@liquality/verus-wallet-provider'\nimport { WalletProvider } from '@liquality/wallet-provider'\nimport { VerusNetwork } from '@liquality/verus-networks'\nimport { verus } from '@liquality/types'\n\nimport { Transaction as BitcoinJsTransaction, script } from 'bitcoinjs-lib'\nimport { signAsync as signBitcoinMessage } from 'bitcoinjs-message'\nimport { mnemonicToSeed } from 'bip39'\nimport { BIP32Interface, fromSeed } from 'bip32'\n\nconst utxolib = require('@bitgo/utxo-lib') // eslint-disable-line\n\ntype WalletProviderConstructor<T = WalletProvider> = new (...args: any[]) => T\n\ninterface VerusJsWalletProviderOptions {\n  network: VerusNetwork\n  mnemonic: string\n  baseDerivationPath: string\n  addressType?: verus.AddressType\n}\n\ninterface ECPairInterface {\n  compressed: boolean\n  network: any\n  lowR: boolean\n  privateKey?: Buffer\n  toWIF(): string\n  verify(hash: Buffer, signature: Buffer): boolean\n  publicKey: Buffer\n  sign(hash: Buffer, lowR?: boolean): Buffer\n  getPublicKey?(): Buffer\n}\n\nclass ECPairShim implements ECPairInterface {\n  bitgoEcPair\n  compressed = false\n  network: any = null\n  lowR = false\n  privateKey: Buffer\n  publicKey: Buffer = Buffer.from([])\n\n  constructor(bitgoEcPair: any) {\n    this.bitgoEcPair = bitgoEcPair\n    this.privateKey = bitgoEcPair.getPrivateKeyBuffer()\n    this.publicKey = bitgoEcPair.getPublicKeyBuffer()\n    this.network = bitgoEcPair.network\n    this.compressed = bitgoEcPair.compressed\n  }\n\n  toWIF() {\n    return this.bitgoEcPair.toWIF()\n  }\n\n  static fromWIF(string: string, network: any): ECPairShim {\n    return new ECPairShim(utxolib.ECPair.fromWIF(string, network))\n  }\n\n  verify(hash: Buffer, signature: Buffer): boolean {\n    return this.bitgoEcPair.verify(hash, signature)\n  }\n\n  sign(hash: Buffer): Buffer {\n    return this.bitgoEcPair.sign(hash)\n  }\n\n  getPublicKey(): Buffer {\n    return this.bitgoEcPair.getPublicKeyBuffer()\n  }\n}\n\nexport default class VerusJsWalletProvider extends VerusWalletProvider(WalletProvider as WalletProviderConstructor) {\n  _mnemonic: string\n  _seedNode: BIP32Interface\n  _baseDerivationNode: BIP32Interface\n\n  constructor(options: VerusJsWalletProviderOptions) {\n    const { network, mnemonic, baseDerivationPath, addressType = verus.AddressType.BECH32 } = options\n    super({ network, baseDerivationPath, addressType })\n\n    if (!mnemonic) throw new Error('Mnemonic should not be empty')\n\n    this._mnemonic = mnemonic\n  }\n\n  async seedNode() {\n    if (this._seedNode) return this._seedNode\n\n    const seed = await mnemonicToSeed(this._mnemonic)\n    this._seedNode = fromSeed(seed, this._network)\n\n    return this._seedNode\n  }\n\n  async baseDerivationNode() {\n    if (this._baseDerivationNode) return this._baseDerivationNode\n\n    const baseNode = await this.seedNode()\n    this._baseDerivationNode = baseNode.derivePath(this._baseDerivationPath)\n\n    return this._baseDerivationNode\n  }\n\n  async keyPair(derivationPath: string): Promise<ECPairInterface> {\n    const wif = await this._toWIF(derivationPath)\n    return ECPairShim.fromWIF(wif, utxolib.networks[this._network.bitgokey])\n  }\n\n  private async _toWIF(derivationPath: string): Promise<string> {\n    const node = await this.seedNode()\n    return node.derivePath(derivationPath).toWIF()\n  }\n\n  async exportPrivateKey() {\n    return this._toWIF(this._baseDerivationPath)\n  }\n\n  async signMessage(message: string, from: string) {\n    const address = await this.getWalletAddress(from)\n    const keyPair = await this.keyPair(address.derivationPath)\n    const signature = await signBitcoinMessage(message, keyPair.privateKey, keyPair.compressed)\n    return signature.toString('hex')\n  }\n\n  canUpdateFee() {\n    return false\n  }\n\n  async _buildTransaction(targets: verus.OutputTarget[], feePerByte?: number, fixedInputs?: verus.Input[]) {\n    const network = this._network\n\n    const unusedAddress = await this.getUnusedAddress(true)\n    const { inputs, change, fee } = await this.getInputsForAmount(targets, feePerByte, fixedInputs)\n\n    if (change) {\n      targets.push({\n        address: unusedAddress.address,\n        value: change.value\n      })\n    }\n\n    const tx = new utxolib.TransactionBuilder(utxolib.networks[network.bitgokey], feePerByte*100)\n    const currentHeight: number = await this.getMethod('getBlockHeight')()\n    tx.setVersion(4)\n    tx.setVersionGroupId(0x892f2085)\n    tx.setExpiryHeight(currentHeight + 20)\n    tx.setLockTime(currentHeight)\n\n    for (let i = 0; i < inputs.length; i++) {\n      tx.addInput(inputs[i].txid, inputs[i].vout)\n    }\n\n    for (const output of targets) {\n      if (output.script) {\n        tx.addOutput(output.script, output.value)\n      } else {\n        tx.addOutput(output.address, output.value)\n      }\n    }\n\n    for (let i = 0; i < inputs.length; i++) {\n      const wallet = await this.getWalletAddress(inputs[i].address)\n      const keyPair = await this.keyPair(wallet.derivationPath)\n\n      tx.sign(i, keyPair, null, null, inputs[i].value)\n    }\n\n    return { hex: tx.build().toHex(), fee }\n  }\n\n  async _buildSweepTransaction(externalChangeAddress: string, feePerByte: number) {\n    let _feePerByte = feePerByte || null\n    if (!_feePerByte) _feePerByte = await this.getMethod('getFeePerByte')()\n\n    const { inputs, outputs, change } = await this.getInputsForAmount([], _feePerByte, [], 100, true)\n\n    if (change) {\n      throw new Error('There should not be any change for sweeping transaction')\n    }\n\n    const _outputs = [\n      {\n        address: externalChangeAddress,\n        value: outputs[0].value\n      }\n    ]\n\n    // @ts-ignore\n    return this._buildTransaction(_outputs, feePerByte, inputs)\n  }\n\n  // async signPSBT(data: string, inputs: verus.PsbtInputTarget[]) {\n  //   const psbt = Psbt.fromBase64(data, { network: this._network })\n  //   for (const input of inputs) {\n  //     const keyPair = await this.keyPair(input.derivationPath)\n  //     psbt.signInput(input.index, keyPair)\n  //   }\n  //   return psbt.toBase64()\n  // }\n\n  async signBatchP2SHTransaction(\n    inputs: [{ inputTxHex: string; index: number; vout: any; outputScript: Buffer; txInputIndex?: number }],\n    addresses: string,\n    tx: any,\n    lockTime?: number,\n    segwit?: boolean\n  ) {\n    const keyPairs = []\n    for (const address of addresses) {\n      const wallet = await this.getWalletAddress(address)\n      const keyPair = await this.keyPair(wallet.derivationPath)\n      keyPairs.push(keyPair)\n    }\n\n    const sigs = []\n    for (let i = 0; i < inputs.length; i++) {\n      const index = inputs[i].txInputIndex ? inputs[i].txInputIndex : inputs[i].index\n      let sigHash\n      if (segwit) {\n        sigHash = tx.hashForWitnessV0(\n          index,\n          inputs[i].outputScript,\n          inputs[i].vout.vSat,\n          BitcoinJsTransaction.SIGHASH_ALL\n        )\n      } else {\n        sigHash = tx.hashForSignature(index, inputs[i].outputScript, BitcoinJsTransaction.SIGHASH_ALL)\n      }\n\n      const sig = script.signature.encode(keyPairs[i].sign(sigHash), BitcoinJsTransaction.SIGHASH_ALL)\n      sigs.push(sig)\n    }\n\n    return sigs\n  }\n\n  getScriptType() {\n    if (this._addressType === verus.AddressType.LEGACY) return 'p2pkh'\n    else if (this._addressType === verus.AddressType.P2SH_SEGWIT) return 'p2sh-p2wpkh'\n    else if (this._addressType === verus.AddressType.BECH32) return 'p2wpkh'\n  }\n\n  async getConnectedNetwork() {\n    return this._network\n  }\n\n  async isWalletAvailable() {\n    return true\n  }\n}\n","import VerusJsWalletProvider from './VerusJsWalletProvider'\n\nexport { VerusJsWalletProvider }\n","module.exports = require(\"@bitgo/utxo-lib\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/verus-wallet-provider\");","module.exports = require(\"@liquality/wallet-provider\");","module.exports = require(\"bip32\");","module.exports = require(\"bip39\");","module.exports = require(\"bitcoinjs-lib\");","module.exports = require(\"bitcoinjs-message\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["utxolib","bitgoEcPair","compressed","network","lowR","publicKey","Buffer","from","this","privateKey","getPrivateKeyBuffer","getPublicKeyBuffer","toWIF","fromWIF","string","ECPairShim","ECPair","verify","hash","signature","sign","getPublicKey","options","mnemonic","baseDerivationPath","addressType","verus","AddressType","BECH32","Error","_mnemonic","seedNode","_seedNode","mnemonicToSeed","seed","fromSeed","_network","baseDerivationNode","_baseDerivationNode","baseNode","derivePath","_baseDerivationPath","keyPair","derivationPath","_toWIF","wif","networks","bitgokey","exportPrivateKey","signMessage","message","getWalletAddress","address","toString","canUpdateFee","_buildTransaction","targets","feePerByte","fixedInputs","getUnusedAddress","unusedAddress","getInputsForAmount","inputs","change","fee","push","value","tx","TransactionBuilder","getMethod","currentHeight","setVersion","setVersionGroupId","setExpiryHeight","setLockTime","i","length","addInput","txid","vout","output","script","addOutput","wallet","hex","build","toHex","_buildSweepTransaction","externalChangeAddress","_feePerByte","outputs","_outputs","signBatchP2SHTransaction","addresses","lockTime","segwit","keyPairs","sigs","index","txInputIndex","sigHash","hashForWitnessV0","outputScript","vSat","SIGHASH_ALL","hashForSignature","sig","encode","getScriptType","_addressType","LEGACY","P2SH_SEGWIT","getConnectedNetwork","isWalletAvailable","VerusWalletProvider","WalletProvider","VerusJsWalletProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}