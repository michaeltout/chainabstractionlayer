{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/near-js-wallet-provider/./lib/NearJsWalletProvider.ts","webpack://@liquality/near-js-wallet-provider/./lib/index.ts","webpack://@liquality/near-js-wallet-provider/external commonjs \"@liquality/near-utils\"","webpack://@liquality/near-js-wallet-provider/external commonjs \"@liquality/types\"","webpack://@liquality/near-js-wallet-provider/external commonjs \"@liquality/utils\"","webpack://@liquality/near-js-wallet-provider/external commonjs \"@liquality/wallet-provider\"","webpack://@liquality/near-js-wallet-provider/external commonjs \"near-seed-phrase\"","webpack://@liquality/near-js-wallet-provider/webpack/bootstrap","webpack://@liquality/near-js-wallet-provider/webpack/startup"],"sourcesContent":["import { WalletProvider } from '@liquality/wallet-provider'\nimport { addressToString } from '@liquality/utils'\nimport { NearNetwork } from '@liquality/near-networks'\nimport { Address, Network, ChainProvider, near } from '@liquality/types'\nimport { normalizeTransactionObject, keyStores, KeyPair, InMemorySigner, transactions, BN } from '@liquality/near-utils'\nimport { parseSeedPhrase } from 'near-seed-phrase'\n\ninterface NearJsWalletProviderOptions {\n  network: NearNetwork\n  mnemonic: string\n  derivationPath: string\n}\n\nexport default class NearJsWalletProvider extends WalletProvider implements Partial<ChainProvider> {\n  _network: NearNetwork\n  _mnemonic: string\n  _derivationPath: string\n  _keyStore: keyStores.InMemoryKeyStore\n  _addressCache: { [key: string]: Address }\n\n  constructor(options: NearJsWalletProviderOptions) {\n    const { network, mnemonic, derivationPath } = options\n    super({ network })\n    this._network = network\n    this._mnemonic = mnemonic\n    this._derivationPath = derivationPath\n    this._keyStore = new keyStores.InMemoryKeyStore()\n    this._addressCache = {}\n  }\n\n  async exportPrivateKey() {\n    const { secretKey } = parseSeedPhrase(this._mnemonic, this._derivationPath)\n    return secretKey\n  }\n\n  async getAddresses(): Promise<Address[]> {\n    if (this._addressCache[this._mnemonic]) {\n      return [this._addressCache[this._mnemonic]]\n    }\n\n    const { publicKey, secretKey } = parseSeedPhrase(this._mnemonic, this._derivationPath)\n    const keyPair = KeyPair.fromString(secretKey)\n\n    let address = await this.getMethod('getImplicitAccount')(publicKey, 0)\n\n    if (!address) {\n      address = Buffer.from(keyPair.getPublicKey().data).toString('hex')\n    }\n\n    await this._keyStore.setKey(this._network.networkId, address, keyPair)\n\n    const result = new Address({\n      address,\n      derivationPath: this._derivationPath,\n      publicKey\n    })\n\n    this._addressCache[this._mnemonic] = result\n    return [result]\n  }\n\n  async getUnusedAddress(): Promise<Address> {\n    const addresses = await this.getAddresses()\n    return addresses[0]\n  }\n\n  async getUsedAddresses(): Promise<Address[]> {\n    return this.getAddresses()\n  }\n\n  getSigner(): InMemorySigner {\n    return new InMemorySigner(this._keyStore)\n  }\n\n  async signMessage(message: string): Promise<string> {\n    const addresses = await this.getAddresses()\n\n    const signed = await this.getSigner().signMessage(\n      Buffer.from(message),\n      addressToString(addresses[0]),\n      this._network.networkId\n    )\n\n    return Buffer.from(signed.signature).toString('hex')\n  }\n\n  async sendTransaction(options: near.NearSendOptions) {\n    const addresses = await this.getAddresses()\n    const from = await this.getMethod('getAccount')(addressToString(addresses[0]), this.getSigner())\n\n    if (!options.actions) {\n      options.actions = [transactions.transfer(new BN(options.value.toFixed()))]\n    }\n\n    const tx = await from.signAndSendTransaction({\n      receiverId: addressToString(options.to),\n      actions: options.actions\n    })\n    return normalizeTransactionObject({ ...tx, blockHash: tx.transaction_outcome.block_hash })\n  }\n\n  async sendSweepTransaction(address: string) {\n    const addresses = await this.getAddresses()\n    const from = await this.getMethod('getAccount')(addressToString(addresses[0]), this.getSigner())\n\n    const tx = await from.deleteAccount(addressToString(address))\n    return normalizeTransactionObject({ ...tx, blockHash: tx.transaction_outcome.block_hash })\n  }\n\n  async isWalletAvailable(): Promise<boolean> {\n    const addresses = await this.getAddresses()\n    return addresses.length > 0\n  }\n\n  async getWalletNetworkId(): Promise<string> {\n    return this._network.networkId\n  }\n\n  async getConnectedNetwork(): Promise<Network> {\n    return this._network\n  }\n\n  canUpdateFee(): boolean {\n    return false\n  }\n}\n","import NearJsWalletProvider from './NearJsWalletProvider'\n\nexport { NearJsWalletProvider }\n","module.exports = require(\"@liquality/near-utils\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/utils\");","module.exports = require(\"@liquality/wallet-provider\");","module.exports = require(\"near-seed-phrase\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["options","network","mnemonic","derivationPath","_network","_mnemonic","_derivationPath","_keyStore","keyStores","InMemoryKeyStore","_addressCache","exportPrivateKey","parseSeedPhrase","this","getAddresses","publicKey","secretKey","keyPair","KeyPair","fromString","getMethod","address","Buffer","from","getPublicKey","data","toString","setKey","networkId","result","Address","getUnusedAddress","getUsedAddresses","getSigner","InMemorySigner","signMessage","message","addresses","addressToString","signed","signature","sendTransaction","actions","transactions","transfer","BN","value","toFixed","signAndSendTransaction","receiverId","to","tx","normalizeTransactionObject","blockHash","transaction_outcome","block_hash","sendSweepTransaction","deleteAccount","isWalletAvailable","length","getWalletNetworkId","getConnectedNetwork","canUpdateFee","WalletProvider","NearJsWalletProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}