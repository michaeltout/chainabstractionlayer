{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/near-swap-find-provider/./lib/NearSwapFindProvider.ts","webpack://@liquality/near-swap-find-provider/./lib/index.ts","webpack://@liquality/near-swap-find-provider/external commonjs \"@liquality/errors\"","webpack://@liquality/near-swap-find-provider/external commonjs \"@liquality/near-utils\"","webpack://@liquality/near-swap-find-provider/external commonjs \"@liquality/node-provider\"","webpack://@liquality/near-swap-find-provider/external commonjs \"@liquality/utils\"","webpack://@liquality/near-swap-find-provider/webpack/bootstrap","webpack://@liquality/near-swap-find-provider/webpack/startup"],"sourcesContent":["import { near, SwapParams, SwapProvider, Transaction } from '@liquality/types'\nimport { NodeProvider } from '@liquality/node-provider'\nimport { PendingTxError } from '@liquality/errors'\nimport { addressToString } from '@liquality/utils'\nimport {\n  fromBase64,\n  toBase64,\n  fromNearTimestamp,\n  parseReceipt,\n  validateSwapParams,\n  validateSecretAndHash\n} from '@liquality/near-utils'\n\nconst ONE_DAY_IN_NS = 24 * 60 * 60 * 1000 * 1000 * 1000\n\nexport default class NearSwapFindProvider extends NodeProvider implements Partial<SwapProvider> {\n  constructor(url: string) {\n    super({\n      baseURL: url,\n      responseType: 'text',\n      transformResponse: undefined // https://github.com/axios/axios/issues/907,\n    })\n  }\n\n  normalizeTransactionResponse(tx: near.NearScraperSwap): near.NearSwapTransaction {\n    const normalizedTx = {\n      hash: `${tx.hash}_${tx.signer_id}`,\n      blockHash: tx.block_hash,\n      sender: tx.signer_id,\n      receiver: tx.receiver_id,\n      rawHash: tx.hash\n    } as { [key: string]: any }\n\n    switch (tx.action_kind) {\n      case 'DEPLOY_CONTRACT': {\n        const code = toBase64(tx.args.code_sha256)\n        normalizedTx.code = code\n        break\n      }\n\n      case 'TRANSFER': {\n        const value = tx.args.deposit\n        normalizedTx.value = value\n        break\n      }\n\n      case 'FUNCTION_CALL': {\n        const method = tx.args.method_name\n        const args = fromBase64(tx.args.args_base64)\n\n        switch (method) {\n          case 'init': {\n            normalizedTx.swap = {\n              method,\n              secretHash: fromBase64(args.secretHash, 'hex'),\n              expiration: fromNearTimestamp(args.expiration),\n              recipient: args.buyer\n            }\n            break\n          }\n\n          case 'claim': {\n            normalizedTx.swap = {\n              method,\n              secret: fromBase64(args.secret, 'hex')\n            }\n\n            break\n          }\n\n          case 'refund': {\n            normalizedTx.swap = { method }\n            break\n          }\n\n          default: {\n            normalizedTx._raw = { method, ...args }\n            break\n          }\n        }\n        break\n      }\n\n      default: {\n        break\n      }\n    }\n    return normalizedTx as near.NearSwapTransaction\n  }\n\n  async findAddressTransaction(\n    address: string,\n    predicate: (tx: near.NearSwapTransaction) => boolean,\n    limit = 1024\n  ): Promise<Transaction<near.NearSwapTransaction>> {\n    let offset = this.getCurrentTimeInNs()\n\n    for (let page = 1; ; page++) {\n      const transactions = (await this.nodeGet(\n        `account/${address}/activity?offset=${offset}&limit=${limit}`\n      )) as near.NearScraperSwap[]\n\n      if (transactions.length === 0) {\n        return\n      }\n\n      const normalizedTransactions = {} as { [key: string]: near.NearSwapTransaction }\n\n      for (const tx of transactions) {\n        normalizedTransactions[tx.hash] = {\n          ...normalizedTransactions[tx.hash],\n          ...this.normalizeTransactionResponse(tx)\n        }\n      }\n\n      const tx = Object.values(normalizedTransactions).find(predicate)\n\n      if (tx) {\n        const txReceipt = await this.getMethod('getTransactionReceipt')(tx.hash)\n        if (!txReceipt || (txReceipt.status && txReceipt.status.Failure)) {\n          return\n        }\n\n        const currentHeight = await this.getMethod('getBlockHeight')()\n        const txBlockHeight = await this.getMethod('getBlockHeight')(tx.blockHash)\n        tx.confirmations = currentHeight - txBlockHeight\n        return { ...tx, secret: tx.swap.secret, _raw: tx }\n      }\n\n      offset = offset - ONE_DAY_IN_NS\n    }\n  }\n\n  async findInitiateSwapTransaction(swapParams: SwapParams) {\n    validateSwapParams(swapParams)\n\n    return this.findAddressTransaction(addressToString(swapParams.refundAddress), (tx: near.NearSwapTransaction) =>\n      this.getMethod('doesTransactionMatchInitiation')(swapParams, tx)\n    )\n  }\n\n  async findClaimSwapTransaction(\n    swapParams: SwapParams,\n    initiationTxHash: string\n  ): Promise<Transaction<near.NearSwapTransaction>> {\n    validateSwapParams(swapParams)\n\n    const initiationTransactionReceipt = await this.getMethod('getTransactionReceipt')(initiationTxHash)\n    if (!initiationTransactionReceipt) {\n      throw new PendingTxError(`Transaction receipt is not available: ${initiationTxHash}`)\n    }\n\n    const tx = await this.findAddressTransaction(\n      addressToString(parseReceipt(initiationTransactionReceipt).receiver),\n      (tx) => {\n        if (tx.swap) {\n          return tx.swap.method === 'claim'\n        }\n      }\n    )\n\n    if (tx && tx.secret) {\n      validateSecretAndHash(tx.secret, swapParams.secretHash)\n      return tx\n    }\n  }\n\n  async findRefundSwapTransaction(\n    swapParams: SwapParams,\n    initiationTxHash: string\n  ): Promise<Transaction<near.NearSwapTransaction>> {\n    validateSwapParams(swapParams)\n\n    const initiationTransactionReceipt = await this.getMethod('getTransactionReceipt')(initiationTxHash)\n    if (!initiationTransactionReceipt) {\n      throw new PendingTxError(`Transaction receipt is not available: ${initiationTxHash}`)\n    }\n\n    return this.findAddressTransaction(addressToString(parseReceipt(initiationTransactionReceipt).receiver), (tx) => {\n      if (tx.swap) {\n        return tx.swap.method === 'refund'\n      }\n    })\n  }\n\n  getCurrentTimeInNs(): number {\n    return new Date().valueOf() * 1000 * 1000\n  }\n\n  doesBlockScan(): boolean {\n    return false\n  }\n}\n","import NearSwapFindProvider from './NearSwapFindProvider'\n\nexport { NearSwapFindProvider }\n","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/near-utils\");","module.exports = require(\"@liquality/node-provider\");","module.exports = require(\"@liquality/utils\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["url","baseURL","responseType","transformResponse","undefined","normalizeTransactionResponse","tx","normalizedTx","hash","signer_id","blockHash","block_hash","sender","receiver","receiver_id","rawHash","action_kind","code","toBase64","args","code_sha256","value","deposit","method","method_name","fromBase64","args_base64","swap","secretHash","expiration","fromNearTimestamp","recipient","buyer","secret","_raw","findAddressTransaction","address","predicate","limit","offset","this","getCurrentTimeInNs","nodeGet","transactions","length","normalizedTransactions","Object","values","find","getMethod","txReceipt","status","Failure","currentHeight","txBlockHeight","confirmations","findInitiateSwapTransaction","swapParams","validateSwapParams","addressToString","refundAddress","findClaimSwapTransaction","initiationTxHash","initiationTransactionReceipt","PendingTxError","parseReceipt","validateSecretAndHash","findRefundSwapTransaction","Date","valueOf","doesBlockScan","NodeProvider","NearSwapFindProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}