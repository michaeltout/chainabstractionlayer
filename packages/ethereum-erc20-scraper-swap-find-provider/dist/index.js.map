{"version":3,"file":"index.js","mappings":"y7DAAA,aACA,SACA,SACA,SACA,SAEA,2B,+CAkEA,OAlEkE,OAC1D,YAAAA,gBAAN,SACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,G,YADA,IAAAD,IAAAA,EAAA,UACA,IAAAC,IAAAA,EAAA,Q,iGAEAN,EAAuB,EAAAO,SAASP,GAChCC,EAAU,EAAAM,SAASN,GAEVO,EAAO,E,iBACD,SAAMC,KAAKC,QAAQ,yBAAyBV,EAAwB,CAC/EC,QAAO,EACPI,MAAK,EACLG,KAAI,EACJF,KAAI,EACJH,UAAS,EACTC,QAAO,K,OAIT,GAVMO,EAAO,SAUe,KADtBC,EAAsBD,EAAKA,KAAKE,KACrBC,OAAc,UAM/B,GAJMC,EAAyBH,EAC5BI,QAAO,SAACC,GAAO,OAAc,IAAdA,EAAGC,UAClBC,IAAIV,KAAKW,8BACNH,EAAKF,EAAuBM,KAAKnB,GAC/B,MAAO,CAAP,EAAOO,KAAKa,cAAcL,IAElC,GAAIL,EAAaE,OAAST,EAAO,U,wBAnBdG,I,+BAuBvB,YAAAe,mBAAA,SAAmBC,GACjB,EAAAC,cAAcD,EAAWE,OACzB,EAAAC,gBAAgBH,EAAWI,kBAC3B,EAAAD,gBAAgBH,EAAWK,eAC3B,EAAAC,mBAAmBN,EAAWO,YAC9B,EAAAC,mBAAmBR,EAAWS,aAG1B,YAAAC,wBAAN,SAA8BV,EAAwBW,G,sGAGf,OAFrC1B,KAAKc,mBAAmBC,GAEa,GAAMf,KAAK2B,UAAU,wBAAf3B,CAAwC0B,I,OACnF,KADME,EAA+B,UAEnC,MAAM,IAAI,EAAAC,eAAe,yCAAyCH,GAGlC,OAD1BI,EAAoBF,EAA4B,gBACtB,GAAM5B,KAAK2B,UAAU,qBAAf3B,I,OAE7B,OAFL+B,EAA4B,SAEvB,GAAM/B,KAAKV,gBACpByC,EACAD,GACA,SAACtB,GACC,SAAAwB,qBAAqB,EAAAC,SAASzB,EAAG0B,KAAKC,IAAK,EAAAF,SAASH,KACpD,IAAI,EAAAM,UAAU5B,EAAGS,OAAOoB,UAAUtB,EAAWE,W,OAGjD,KARMT,EAAK,UAQF,MAAM,IAAI,EAAA8B,gBAAgB,yCAAyCZ,GAE5E,MAAO,CAAP,EAAOlB,WAEX,EAlEA,CAAkE,EAAA+B,iC,oNCNlE,gBAES,EAAAC,qCAFF,W,QCAPC,EAAOC,QAAUC,QAAQ,sB,QCAzBF,EAAOC,QAAUC,QAAQ,mD,QCAzBF,EAAOC,QAAUC,QAAQ,8B,QCAzBF,EAAOC,QAAUC,QAAQ,qB,QCAzBF,EAAOC,QAAUC,QAAQ,sBCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/./lib/EthereumErc20ScraperSwapFindProvider.ts","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/./lib/index.ts","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/external commonjs \"@liquality/errors\"","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/external commonjs \"@liquality/ethereum-scraper-swap-find-provider\"","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/external commonjs \"@liquality/ethereum-utils\"","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/external commonjs \"@liquality/types\"","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/external commonjs \"@liquality/utils\"","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/webpack/bootstrap","webpack://@liquality/ethereum-erc20-scraper-swap-find-provider/webpack/startup"],"sourcesContent":["import { EthereumScraperSwapFindProvider, scraper } from '@liquality/ethereum-scraper-swap-find-provider'\nimport { ensure0x, remove0x, validateAddress, validateExpiration } from '@liquality/ethereum-utils'\nimport { PendingTxError, TxNotFoundError } from '@liquality/errors'\nimport { SwapParams, Transaction, BigNumber } from '@liquality/types'\nimport { caseInsensitiveEqual, validateValue, validateSecretHash } from '@liquality/utils'\n\nexport default class EthereumErc20ScraperSwapFindProvider extends EthereumScraperSwapFindProvider {\n  async findErc20Events(\n    erc20ContractAddress: string,\n    address: string,\n    predicate: (tx: Transaction<scraper.Transaction>) => boolean,\n    fromBlock?: number,\n    toBlock?: number,\n    limit = 250,\n    sort = 'desc'\n  ) {\n    erc20ContractAddress = ensure0x(erc20ContractAddress)\n    address = ensure0x(address)\n\n    for (let page = 1; ; page++) {\n      const data = await this.nodeGet(`/events/erc20Transfer/${erc20ContractAddress}`, {\n        address,\n        limit,\n        page,\n        sort,\n        fromBlock,\n        toBlock\n      })\n\n      const transactions: any[] = data.data.txs\n      if (transactions.length === 0) return\n\n      const normalizedTransactions = transactions\n        .filter((tx) => tx.status === true)\n        .map(this.normalizeTransactionResponse)\n      const tx = normalizedTransactions.find(predicate)\n      if (tx) return this.ensureFeeInfo(tx)\n\n      if (transactions.length < limit) return\n    }\n  }\n\n  validateSwapParams(swapParams: SwapParams) {\n    validateValue(swapParams.value)\n    validateAddress(swapParams.recipientAddress)\n    validateAddress(swapParams.refundAddress)\n    validateSecretHash(swapParams.secretHash)\n    validateExpiration(swapParams.expiration)\n  }\n\n  async findFundSwapTransaction(swapParams: SwapParams, initiationTxHash: string) {\n    this.validateSwapParams(swapParams)\n\n    const initiationTransactionReceipt = await this.getMethod('getTransactionReceipt')(initiationTxHash)\n    if (!initiationTransactionReceipt)\n      throw new PendingTxError(`Transaction receipt is not available: ${initiationTxHash}`)\n\n    const { contractAddress } = initiationTransactionReceipt\n    const erc20TokenContractAddress = await this.getMethod('getContractAddress')()\n\n    const tx = await this.findErc20Events(\n      erc20TokenContractAddress,\n      contractAddress,\n      (tx) =>\n        caseInsensitiveEqual(remove0x(tx._raw.to), remove0x(contractAddress)) &&\n        new BigNumber(tx.value).isEqualTo(swapParams.value)\n    )\n\n    if (!tx) throw new TxNotFoundError(`Funding transaction is not available: ${initiationTxHash}`)\n\n    return tx\n  }\n}\n","import EthereumErc20ScraperSwapFindProvider from './EthereumErc20ScraperSwapFindProvider'\n\nexport { EthereumErc20ScraperSwapFindProvider }\n","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/ethereum-scraper-swap-find-provider\");","module.exports = require(\"@liquality/ethereum-utils\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/utils\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["findErc20Events","erc20ContractAddress","address","predicate","fromBlock","toBlock","limit","sort","ensure0x","page","this","nodeGet","data","transactions","txs","length","normalizedTransactions","filter","tx","status","map","normalizeTransactionResponse","find","ensureFeeInfo","validateSwapParams","swapParams","validateValue","value","validateAddress","recipientAddress","refundAddress","validateSecretHash","secretHash","validateExpiration","expiration","findFundSwapTransaction","initiationTxHash","getMethod","initiationTransactionReceipt","PendingTxError","contractAddress","erc20TokenContractAddress","caseInsensitiveEqual","remove0x","_raw","to","BigNumber","isEqualTo","TxNotFoundError","EthereumScraperSwapFindProvider","EthereumErc20ScraperSwapFindProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}