{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/terra-rpc-provider/./lib/TerraRpcProvider.ts","webpack://@liquality/terra-rpc-provider/./lib/index.ts","webpack://@liquality/terra-rpc-provider/external commonjs \"@liquality/errors\"","webpack://@liquality/terra-rpc-provider/external commonjs \"@liquality/node-provider\"","webpack://@liquality/terra-rpc-provider/external commonjs \"@liquality/terra-utils\"","webpack://@liquality/terra-rpc-provider/external commonjs \"@liquality/types\"","webpack://@liquality/terra-rpc-provider/external commonjs \"@liquality/utils\"","webpack://@liquality/terra-rpc-provider/external commonjs \"@terra-money/terra.js\"","webpack://@liquality/terra-rpc-provider/webpack/bootstrap","webpack://@liquality/terra-rpc-provider/webpack/startup"],"sourcesContent":["import { NodeProvider as NodeProvider } from '@liquality/node-provider'\nimport { BigNumber, ChainProvider, Address, Block, Transaction, terra, FeeProvider } from '@liquality/types'\nimport { addressToString } from '@liquality/utils'\nimport { TxNotFoundError } from '@liquality/errors'\nimport { normalizeBlock, normalizeTransaction } from '@liquality/terra-utils'\nimport { TerraNetwork } from '@liquality/terra-networks'\nimport { LCDClient } from '@terra-money/terra.js'\n\nexport default class TerraRpcProvider extends NodeProvider implements FeeProvider, Partial<ChainProvider> {\n  private _network: TerraNetwork\n  private _lcdClient: LCDClient\n  private _asset: string\n  private _tokenAddress: string\n  private _feeAsset: string\n\n  constructor(network: TerraNetwork, asset: string, feeAsset: string, tokenAddress?: string) {\n    super({\n      baseURL: network.helperUrl,\n      responseType: 'text',\n      transformResponse: undefined\n    })\n\n    this._lcdClient = new LCDClient({\n      URL: network.nodeUrl,\n      chainID: network.chainID\n    })\n\n    this._network = network\n    this._asset = asset\n    this._tokenAddress = tokenAddress\n    this._feeAsset = feeAsset\n  }\n\n  async generateBlock(numberOfBlocks: number): Promise<void> {\n    await new Promise((resolve) => setTimeout(resolve, numberOfBlocks * 20000))\n  }\n\n  async getBlockByHash(): Promise<Block> {\n    throw new Error('Method not implemented.')\n  }\n\n  async getBlockByNumber(\n    blockNumber: number,\n    includeTx?: boolean\n  ): Promise<Block<Transaction<terra.InputTransaction>>> {\n    const block = await this._lcdClient.tendermint.blockInfo(blockNumber)\n\n    const parsedBlock = normalizeBlock(block)\n\n    if (!includeTx) {\n      return parsedBlock\n    }\n\n    const txs = await this._lcdClient.tx.txInfosByHeight(Number(block.block.header.height))\n\n    const transactions = txs.map((tx) => normalizeTransaction(tx, this._asset))\n\n    return {\n      ...parsedBlock,\n      transactions\n    }\n  }\n\n  async getBlockHeight(): Promise<number> {\n    const {\n      block: {\n        header: { height }\n      }\n    } = await this._lcdClient.tendermint.blockInfo()\n\n    return Number(height)\n  }\n\n  async getTransactionByHash(txHash: string): Promise<Transaction<terra.InputTransaction>> {\n    const transaction = await this._lcdClient.tx.txInfo(txHash)\n\n    if (!transaction) {\n      throw new TxNotFoundError(`Transaction not found: ${txHash}`)\n    }\n\n    const currentBlock = await this.getBlockHeight()\n\n    return normalizeTransaction(transaction, this._asset, currentBlock)\n  }\n\n  async getBalance(_addresses: (string | Address)[]): Promise<BigNumber> {\n    const addresses = _addresses.map(addressToString)\n\n    const promiseBalances = await Promise.all(\n      addresses.map(async (address) => {\n        try {\n          let balance = 0\n\n          if (this._tokenAddress) {\n            const token = await this._lcdClient.wasm.contractQuery<{ balance: string }>(this._tokenAddress, {\n              balance: { address }\n            })\n            balance = Number(token.balance)\n          } else {\n            const coins = await this._lcdClient.bank.balance(address)\n            balance = Number(coins[0].get(this._asset)?.amount)\n          }\n\n          return new BigNumber(balance)\n        } catch (err) {\n          if (err.message && err.message.includes('does not exist while viewing')) {\n            return new BigNumber(0)\n          }\n          throw err\n        }\n      })\n    )\n\n    return promiseBalances\n      .map((balance) => new BigNumber(balance))\n      .reduce((acc, balance) => acc.plus(balance), new BigNumber(0))\n  }\n\n  sendRawTransaction(): Promise<string> {\n    throw new Error('Method not implemented.')\n  }\n\n  async getFees() {\n    const prices = await this.nodeGet(this._network.gasPricesUrl)\n\n    return {\n      slow: {\n        fee: Number(prices[this._feeAsset])\n      },\n      average: {\n        fee: Number(prices[this._feeAsset])\n      },\n      fast: {\n        fee: Number(prices[this._feeAsset])\n      }\n    }\n  }\n}\n","import TerraRpcProvider from './TerraRpcProvider'\nexport { TerraRpcProvider }\n","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/node-provider\");","module.exports = require(\"@liquality/terra-utils\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/utils\");","module.exports = require(\"@terra-money/terra.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["network","asset","feeAsset","tokenAddress","baseURL","helperUrl","responseType","transformResponse","undefined","_lcdClient","LCDClient","URL","nodeUrl","chainID","_network","_asset","_tokenAddress","_feeAsset","generateBlock","numberOfBlocks","Promise","resolve","setTimeout","getBlockByHash","Error","getBlockByNumber","blockNumber","includeTx","this","tendermint","blockInfo","block","parsedBlock","normalizeBlock","tx","txInfosByHeight","Number","header","height","txs","transactions","map","normalizeTransaction","getBlockHeight","getTransactionByHash","txHash","txInfo","transaction","TxNotFoundError","currentBlock","getBalance","_addresses","addresses","addressToString","all","address","balance","wasm","contractQuery","token","bank","coins","get","amount","BigNumber","message","includes","reduce","acc","plus","sendRawTransaction","getFees","nodeGet","gasPricesUrl","prices","slow","fee","average","fast","NodeProvider","TerraRpcProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}