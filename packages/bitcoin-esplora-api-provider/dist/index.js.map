{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/bitcoin-esplora-api-provider/./lib/BitcoinEsploraApiProvider.ts","webpack://@liquality/bitcoin-esplora-api-provider/./lib/index.ts","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"@liquality/bitcoin-utils\"","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"@liquality/errors\"","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"@liquality/node-provider\"","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"@liquality/types\"","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"@liquality/utils\"","webpack://@liquality/bitcoin-esplora-api-provider/external commonjs \"lodash\"","webpack://@liquality/bitcoin-esplora-api-provider/webpack/bootstrap","webpack://@liquality/bitcoin-esplora-api-provider/webpack/startup"],"sourcesContent":["import { NodeProvider } from '@liquality/node-provider'\nimport { addressToString } from '@liquality/utils'\nimport { decodeRawTransaction, normalizeTransactionObject } from '@liquality/bitcoin-utils'\nimport { TxNotFoundError, BlockNotFoundError } from '@liquality/errors'\nimport { ChainProvider, Address, bitcoin, BigNumber } from '@liquality/types'\nimport * as esplora from './types'\nimport { BitcoinNetwork } from '@liquality/bitcoin-networks'\n\nimport { flatten } from 'lodash'\n\nexport interface EsploraApiProviderOptions {\n  url: string\n  network: BitcoinNetwork\n  // Default 1\n  numberOfBlockConfirmation?: number\n  // Default 3\n  defaultFeePerByte?: number\n}\n\nexport default class BitcoinEsploraApiProvider extends NodeProvider implements Partial<ChainProvider> {\n  _network: BitcoinNetwork\n  _numberOfBlockConfirmation: number\n  _defaultFeePerByte: number\n  _usedAddressCache: { [index: string]: boolean }\n\n  constructor(options: EsploraApiProviderOptions) {\n    const { url, network, numberOfBlockConfirmation = 1, defaultFeePerByte = 3 } = options\n    super({\n      baseURL: url,\n      responseType: 'text',\n      transformResponse: undefined // https://github.com/axios/axios/issues/907,\n    })\n\n    this._network = network\n    this._numberOfBlockConfirmation = numberOfBlockConfirmation\n    this._defaultFeePerByte = defaultFeePerByte\n    this._usedAddressCache = {}\n  }\n\n  async getFeePerByte(numberOfBlocks = this._numberOfBlockConfirmation) {\n    try {\n      const feeEstimates: esplora.FeeEstimates = await this.nodeGet('/fee-estimates')\n      const blockOptions = Object.keys(feeEstimates).map((block) => parseInt(block))\n      const closestBlockOption = blockOptions.reduce((prev, curr) => {\n        return Math.abs(prev - numberOfBlocks) < Math.abs(curr - numberOfBlocks) ? prev : curr\n      })\n      const rate = Math.round(feeEstimates[closestBlockOption])\n      return rate\n    } catch (e) {\n      return this._defaultFeePerByte\n    }\n  }\n\n  async getMinRelayFee() {\n    return 1\n  }\n\n  async getBalance(_addresses: (string | Address)[]) {\n    const addresses = _addresses.map(addressToString)\n    const _utxos = await this.getUnspentTransactions(addresses)\n    const utxos = flatten(_utxos)\n\n    return utxos.reduce((acc, utxo) => acc.plus(utxo.value), new BigNumber(0))\n  }\n\n  async _getUnspentTransactions(address: string): Promise<bitcoin.UTXO[]> {\n    const data: esplora.UTXO[] = await this.nodeGet(`/address/${address}/utxo`)\n    return data.map((utxo) => ({\n      ...utxo,\n      address,\n      value: utxo.value,\n      blockHeight: utxo.status.block_height\n    }))\n  }\n\n  async getUnspentTransactions(_addresses: (Address | string)[]): Promise<bitcoin.UTXO[]> {\n    const addresses = _addresses.map(addressToString)\n    const utxoSets = await Promise.all(addresses.map((addr) => this._getUnspentTransactions(addr)))\n    const utxos = flatten(utxoSets)\n    return utxos\n  }\n\n  async _getAddressTransactionCount(address: string) {\n    const data: esplora.Address = await this.nodeGet(`/address/${address}`)\n    return data.chain_stats.tx_count + data.mempool_stats.tx_count\n  }\n\n  async getAddressTransactionCounts(_addresses: (Address | string)[]) {\n    const addresses = _addresses.map(addressToString)\n    const transactionCountsArray = await Promise.all(\n      addresses.map(async (addr) => {\n        const txCount = await this._getAddressTransactionCount(addr)\n        return { [addr]: txCount }\n      })\n    )\n    const transactionCounts = Object.assign({}, ...transactionCountsArray)\n    return transactionCounts\n  }\n\n  async getTransactionHex(transactionHash: string): Promise<string> {\n    return this.nodeGet(`/tx/${transactionHash}/hex`)\n  }\n\n  async getTransaction(transactionHash: string) {\n    let data: esplora.Transaction\n\n    try {\n      data = await this.nodeGet(`/tx/${transactionHash}`)\n    } catch (e) {\n      if (e.name === 'NodeError' && e.message.includes('Transaction not found')) {\n        const { name, message, ...attrs } = e\n        throw new TxNotFoundError(`Transaction not found: ${transactionHash}`, attrs)\n      }\n\n      throw e\n    }\n\n    const currentHeight = await this.getBlockHeight()\n    return this.formatTransaction(data, currentHeight)\n  }\n\n  async formatTransaction(tx: esplora.Transaction, currentHeight: number) {\n    const hex = await this.getTransactionHex(tx.txid)\n    const confirmations = tx.status.confirmed ? currentHeight - tx.status.block_height + 1 : 0\n    const decodedTx = decodeRawTransaction(hex, this._network)\n    decodedTx.confirmations = confirmations\n    return normalizeTransactionObject(decodedTx, tx.fee, { hash: tx.status.block_hash, number: tx.status.block_height })\n  }\n\n  async getBlockByHash(blockHash: string) {\n    let data\n\n    try {\n      data = await this.nodeGet(`/block/${blockHash}`)\n    } catch (e) {\n      if (e.name === 'NodeError' && e.message.includes('Block not found')) {\n        const { name, message, ...attrs } = e\n        throw new BlockNotFoundError(`Block not found: ${blockHash}`, attrs)\n      }\n\n      throw e\n    }\n\n    const {\n      id: hash,\n      height: number,\n      timestamp,\n      mediantime,\n      size,\n      previousblockhash: parentHash,\n      difficulty,\n      nonce\n    } = data\n\n    return {\n      hash,\n      number,\n      timestamp: mediantime || timestamp,\n      size,\n      parentHash,\n      difficulty,\n      nonce\n    }\n  }\n\n  async getBlockHash(blockNumber: number): Promise<string> {\n    return this.nodeGet(`/block-height/${blockNumber}`)\n  }\n\n  async getBlockByNumber(blockNumber: number) {\n    return this.getBlockByHash(await this.getBlockHash(blockNumber))\n  }\n\n  async getBlockHeight(): Promise<number> {\n    const data = await this.nodeGet('/blocks/tip/height')\n    return parseInt(data)\n  }\n\n  async getTransactionByHash(transactionHash: string) {\n    return this.getTransaction(transactionHash)\n  }\n\n  async getRawTransactionByHash(transactionHash: string) {\n    return this.getTransactionHex(transactionHash)\n  }\n\n  async sendRawTransaction(rawTransaction: string): Promise<string> {\n    return this.nodePost('/tx', rawTransaction)\n  }\n}\n","import BitcoinEsploraApiProvider, { EsploraApiProviderOptions } from './BitcoinEsploraApiProvider'\nimport * as esplora from './types'\n\nexport { BitcoinEsploraApiProvider, esplora, EsploraApiProviderOptions }\n","module.exports = require(\"@liquality/bitcoin-utils\");","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/node-provider\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/utils\");","module.exports = require(\"lodash\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["options","url","network","numberOfBlockConfirmation","defaultFeePerByte","baseURL","responseType","transformResponse","undefined","_network","_numberOfBlockConfirmation","_defaultFeePerByte","_usedAddressCache","getFeePerByte","numberOfBlocks","this","nodeGet","feeEstimates","blockOptions","Object","keys","map","block","parseInt","closestBlockOption","reduce","prev","curr","Math","abs","round","getMinRelayFee","getBalance","_addresses","addresses","addressToString","getUnspentTransactions","_utxos","flatten","acc","utxo","plus","value","BigNumber","_getUnspentTransactions","address","blockHeight","status","block_height","Promise","all","addr","utxoSets","_getAddressTransactionCount","data","chain_stats","tx_count","mempool_stats","getAddressTransactionCounts","txCount","transactionCountsArray","assign","getTransactionHex","transactionHash","getTransaction","name","message","includes","attrs","TxNotFoundError","getBlockHeight","currentHeight","formatTransaction","tx","txid","hex","confirmations","confirmed","decodedTx","decodeRawTransaction","normalizeTransactionObject","fee","hash","block_hash","number","getBlockByHash","blockHash","BlockNotFoundError","timestamp","mediantime","size","parentHash","difficulty","nonce","getBlockHash","blockNumber","getBlockByNumber","getTransactionByHash","getRawTransactionByHash","sendRawTransaction","rawTransaction","nodePost","NodeProvider","BitcoinEsploraApiProvider","esplora","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}