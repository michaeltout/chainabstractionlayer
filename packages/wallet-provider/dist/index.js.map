{"version":3,"file":"index.js","mappings":"y7DAAA,aAEA,SAEA,SAEA,cAIE,WAAYA,GAAZ,MACE,cAAO,KAYP,OAXA,EAAKC,SAAWD,EAAQE,QACxB,EAAKC,SAAWC,OAAOC,oBAAoBC,EAAeC,WAAWC,QACnE,SAACC,GACC,OAAC,CACC,cACA,qBACA,sBACA,qBACA,qBACAC,SAASD,MAER,EAAKR,SAAW,IAAIU,MAAM,EAAM,CAAEC,IAAK,EAAKC,mBAAmBC,KAAK,KAAW,EAmC1F,OApDqD,OAoBnD,YAAAD,mBAAA,SAAmBE,EAAaC,GAAhC,WACQP,EAASM,EAAOC,GACtB,OAAIC,KAAKd,SAASO,SAASM,GAClB,W,IAAO,sD,uFACZ,SAAMC,KAAKC,sB,OACX,OADA,SACO,CAAP,EAAOT,EAAOK,KAAKC,GAAO,aAAII,YAGzBV,GAIL,YAAAS,mBAAN,W,gGAC2B,SAAMD,KAAKG,uB,OACpC,GADMC,EAAmB,UACnB,EAAAC,QAAQD,EAAkBJ,KAAKhB,WAAuC,YAA1BoB,EAAiBE,KACjE,MAAM,IAAI,EAAAC,YACR,yCAAyCP,KAAKhB,SAASsB,KAAI,uCAAuCF,EAAiBE,KAAI,K,kBAgB/H,EApDA,CAAqD,EAAAE,U,8LCNrD,gBAES,EAAAnB,eAFF,W,QCAPoB,EAAOC,QAAUC,QAAQ,sB,QCAzBF,EAAOC,QAAUC,QAAQ,wB,QCAzBF,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/wallet-provider/./lib/WalletProvider.ts","webpack://@liquality/wallet-provider/./lib/index.ts","webpack://@liquality/wallet-provider/external commonjs \"@liquality/errors\"","webpack://@liquality/wallet-provider/external commonjs \"@liquality/provider\"","webpack://@liquality/wallet-provider/external commonjs \"lodash\"","webpack://@liquality/wallet-provider/webpack/bootstrap","webpack://@liquality/wallet-provider/webpack/startup"],"sourcesContent":["import { Provider } from '@liquality/provider'\nimport { Network, WalletProvider as IWalletProvider, Address } from '@liquality/types'\nimport { WalletError } from '@liquality/errors'\n\nimport { isEqual } from 'lodash'\n\nexport default abstract class WalletProvider extends Provider implements IWalletProvider {\n  _network: Network\n  _methods: string[]\n\n  constructor(options: { network: Network }) {\n    super()\n    this._network = options.network\n    this._methods = Object.getOwnPropertyNames(WalletProvider.prototype).filter(\n      (method) =>\n        ![\n          'constructor',\n          '_networkMatchProxy',\n          'getConnectedNetwork',\n          'assertNetworkMatch',\n          'isWalletAvailable'\n        ].includes(method)\n    )\n    return this._network ? new Proxy(this, { get: this._networkMatchProxy.bind(this) }) : this\n  }\n\n  _networkMatchProxy(target: any, func: string) {\n    const method = target[func]\n    if (this._methods.includes(func)) {\n      return async (...args: any[]) => {\n        await this.assertNetworkMatch()\n        return method.bind(target)(...args)\n      }\n    } else {\n      return method\n    }\n  }\n\n  async assertNetworkMatch() {\n    const connectedNetwork = await this.getConnectedNetwork()\n    if (!(isEqual(connectedNetwork, this._network) || connectedNetwork.name === 'unknown')) {\n      throw new WalletError(\n        `Network mismatch. Configured network '${this._network.name}' does not match connected network '${connectedNetwork.name}'`\n      )\n    }\n  }\n\n  abstract isWalletAvailable(): Promise<boolean>\n\n  abstract getAddresses(startingIndex?: number, numAddresses?: number, change?: boolean): Promise<Address[]>\n\n  abstract getUsedAddresses(numAddressPerCall?: number): Promise<Address[]>\n\n  abstract getUnusedAddress(change?: boolean, numAddressPerCall?: number): Promise<Address>\n\n  abstract signMessage(message: string, from: string): Promise<string>\n\n  abstract getConnectedNetwork(): Promise<any>\n}\n","import WalletProvider from './WalletProvider'\n\nexport { WalletProvider }\n","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/provider\");","module.exports = require(\"lodash\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["options","_network","network","_methods","Object","getOwnPropertyNames","WalletProvider","prototype","filter","method","includes","Proxy","get","_networkMatchProxy","bind","target","func","this","assertNetworkMatch","args","getConnectedNetwork","connectedNetwork","isEqual","name","WalletError","Provider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}