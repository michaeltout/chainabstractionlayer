{"version":3,"file":"index.js","mappings":"y7DAAA,aAWA,GAVA,OAUA,YACE,WAAYA,G,OACV,YAAM,CACJC,QAASD,EACTE,aAAc,OACdC,uBAAmBC,KACnB,KAgCN,OAtC4D,OASpD,YAAAC,uBAAN,SAA6BC,EAAiBC,EAAuBC,G,wGAG9C,SAAMC,KAAKC,QAAQ,YAAYJ,EAAO,S,OAArDK,EAAe,S,IAEK,EAAAA,E,wBAAA,YAAfC,EAAW,KAC2C,GAAMH,KAAKI,UAAU,oBAAfJ,CACnEG,EACAL,KAHkC,M,OAKpC,GAJMO,EAAyD,SAI3DN,EAAUM,GACZ,MAAO,CAAP,EAAOA,G,wBANe,I,+BAWtB,YAAAC,oBAAN,SAA0BC,EAAwBC,EAAqBT,G,4GACvC,SAAMC,KAAKI,UAAU,iBAAfJ,I,OAGpC,IAHMF,EAAwB,SACxBW,EAAqBT,KAAKI,UAAU,gBAAfJ,CAAgCO,GACrDG,EAAmCV,KAAKI,UAAU,yBAAfJ,CAAyCS,GAC7E,EAAL,EAA6B,EAAAE,OAAOC,OAAOF,GAAd,eAE3B,GAFSG,EAAc,KACjBC,EAAqBd,KAAKJ,uBAAuBiB,EAAehB,QAASC,EAAeC,GACtE,MAAO,CAAP,EAAOe,G,kBAInC,YAAAC,cAAA,WACE,OAAO,GAEX,EAtCA,CAA4D,EAAAC,e,8MCX5D,gBAES,EAAAC,+BAFF,W,QCAPC,EAAOC,QAAUC,QAAQ,6B,QCAzBF,EAAOC,QAAUC,QAAQ,sBCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqB7B,IAAjB8B,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAO,EAAoBF,GAAUG,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/bitcoin-esplora-swap-find-provider/./lib/BitcoinEsploraSwapFindProvider.ts","webpack://@liquality/bitcoin-esplora-swap-find-provider/./lib/index.ts","webpack://@liquality/bitcoin-esplora-swap-find-provider/external commonjs \"@liquality/node-provider\"","webpack://@liquality/bitcoin-esplora-swap-find-provider/external commonjs \"@liquality/types\"","webpack://@liquality/bitcoin-esplora-swap-find-provider/webpack/bootstrap","webpack://@liquality/bitcoin-esplora-swap-find-provider/webpack/startup"],"sourcesContent":["import { NodeProvider } from '@liquality/node-provider'\nimport { SwapParams, Transaction, bitcoin } from '@liquality/types'\nimport { payments } from 'bitcoinjs-lib'\n\ntype TransactionMatchesFunction = (tx: Transaction<bitcoin.Transaction>) => boolean\ntype PaymentVariants = {\n  [bitcoin.SwapMode.P2WSH]?: payments.Payment\n  [bitcoin.SwapMode.P2SH_SEGWIT]?: payments.Payment\n  [bitcoin.SwapMode.P2SH]?: payments.Payment\n}\n\nexport default class BitcoinEsploraSwapFindProvider extends NodeProvider {\n  constructor(url: string) {\n    super({\n      baseURL: url,\n      responseType: 'text',\n      transformResponse: undefined // https://github.com/axios/axios/issues/907,\n    })\n  }\n\n  async findAddressTransaction(address: string, currentHeight: number, predicate: TransactionMatchesFunction) {\n    // TODO: This does not go through pages as swap addresses have at most 2 transactions\n    // Investigate whether retrieving more transactions is required.\n    const transactions = await this.nodeGet(`/address/${address}/txs`)\n\n    for (const transaction of transactions) {\n      const formattedTransaction: Transaction<bitcoin.Transaction> = await this.getMethod('formatTransaction')(\n        transaction,\n        currentHeight\n      )\n      if (predicate(formattedTransaction)) {\n        return formattedTransaction\n      }\n    }\n  }\n\n  async findSwapTransaction(swapParams: SwapParams, blockNumber: number, predicate: TransactionMatchesFunction) {\n    const currentHeight: number = await this.getMethod('getBlockHeight')()\n    const swapOutput: Buffer = this.getMethod('getSwapOutput')(swapParams)\n    const paymentVariants: PaymentVariants = this.getMethod('getSwapPaymentVariants')(swapOutput)\n    for (const paymentVariant of Object.values(paymentVariants)) {\n      const addressTransaction = this.findAddressTransaction(paymentVariant.address, currentHeight, predicate)\n      if (addressTransaction) return addressTransaction\n    }\n  }\n\n  doesBlockScan() {\n    return false\n  }\n}\n","import BitcoinEsploraSwapFindProvider from './BitcoinEsploraSwapFindProvider'\n\nexport { BitcoinEsploraSwapFindProvider }\n","module.exports = require(\"@liquality/node-provider\");","module.exports = require(\"@liquality/types\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["url","baseURL","responseType","transformResponse","undefined","findAddressTransaction","address","currentHeight","predicate","this","nodeGet","transactions","transaction","getMethod","formattedTransaction","findSwapTransaction","swapParams","blockNumber","swapOutput","paymentVariants","Object","values","paymentVariant","addressTransaction","doesBlockScan","NodeProvider","BitcoinEsploraSwapFindProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}