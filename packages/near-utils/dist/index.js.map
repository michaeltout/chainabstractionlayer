{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@liquality/near-utils/./lib/index.ts","webpack://@liquality/near-utils/external commonjs \"@liquality/errors\"","webpack://@liquality/near-utils/external commonjs \"@liquality/types\"","webpack://@liquality/near-utils/external commonjs \"@liquality/utils\"","webpack://@liquality/near-utils/external commonjs \"bn.js\"","webpack://@liquality/near-utils/external commonjs \"near-api-js\"","webpack://@liquality/near-utils/webpack/bootstrap","webpack://@liquality/near-utils/webpack/startup"],"sourcesContent":["import { near, SwapParams, Transaction, Address, TxStatus } from '@liquality/types'\nimport { validateValue, validateSecretHash, validateExpiration, addressToString } from '@liquality/utils'\nimport { InvalidAddressError } from '@liquality/errors'\nimport BN from 'bn.js'\n\nexport { validateSecret, validateSecretAndHash } from '@liquality/utils'\nexport { transactions, Account, InMemorySigner, providers, KeyPair, keyStores } from 'near-api-js'\nexport { BN }\n\nexport function validateSwapParams(swapParams: SwapParams) {\n  validateValue(swapParams.value)\n  validateAddress(swapParams.recipientAddress)\n  validateAddress(swapParams.refundAddress)\n  validateSecretHash(swapParams.secretHash)\n  validateExpiration(swapParams.expiration)\n}\n\nexport function validateAddress(_address: Address | string) {\n  const address = addressToString(_address)\n\n  if (typeof address !== 'string') {\n    throw new InvalidAddressError(`Invalid address: ${address}`)\n  }\n\n  if (address.length < 2) {\n    throw new InvalidAddressError(`Invalid address. Minimum length is 2`)\n  }\n\n  if (address.length > 64) {\n    throw new InvalidAddressError(`Invalid address. Maximum length is 64`)\n  }\n}\n\nfunction toBase64(str: string, encoding = 'hex' as BufferEncoding): string {\n  try {\n    return Buffer.from(str, encoding).toString('base64')\n  } catch (e) {\n    return str\n  }\n}\n\nfunction fromBase64(str: string, encoding?: BufferEncoding): any {\n  if (!str) {\n    return {}\n  }\n\n  try {\n    const decoded = Buffer.from(str, 'base64').toString(encoding)\n    try {\n      return JSON.parse(decoded)\n    } catch (e) {\n      return decoded\n    }\n  } catch (e) {\n    return str\n  }\n}\n\nfunction toNearTimestampFormat(ts: number): number {\n  return ts * 1000 * 1000 * 1000\n}\n\nfunction fromNearTimestamp(ts: number): number {\n  return Math.floor(ts / (1000 * 1000 * 1000))\n}\n\nfunction normalizeTransactionObject(tx: near.InputTransaction, currentHeight?: number) {\n  const normalizedTx = { confirmations: 0, status: TxStatus.Pending } as Transaction<near.InputTransaction>\n\n  const blockNumber = tx.transaction.blockNumber || tx.blockNumber\n  if (blockNumber) {\n    if (currentHeight) {\n      normalizedTx.confirmations = currentHeight - blockNumber\n    }\n\n    normalizedTx.blockNumber = blockNumber\n    normalizedTx.status = tx.status.Failure ? TxStatus.Failed : TxStatus.Success\n  }\n\n  normalizedTx.blockHash = tx.blockHash\n  normalizedTx.hash = `${tx.transaction.hash}_${tx.transaction.signer_id}`\n  normalizedTx.value = 0\n  normalizedTx._raw = tx\n\n  return normalizedTx\n}\n\nfunction parseReceipt(_tx: near.InputTransaction): near.NearSwapTransaction {\n  const normalizedTx = normalizeTransactionObject(_tx)\n  const tx = normalizedTx._raw\n\n  const nearSwapTx = { ...normalizedTx } as near.NearSwapTransaction\n\n  if (tx) {\n    nearSwapTx.sender = tx.transaction.signer_id\n    nearSwapTx.receiver = tx.transaction.receiver_id\n\n    if (tx.transaction.actions) {\n      tx.transaction.actions.forEach((a: any) => {\n        if (a.Transfer) {\n          nearSwapTx.value = a.Transfer.deposit\n        }\n\n        if (a.DeployContract) {\n          nearSwapTx.code = a.DeployContract.code\n        }\n\n        if (a.FunctionCall) {\n          const method = a.FunctionCall.method_name\n\n          switch (method) {\n            case 'init': {\n              const args = fromBase64(a.FunctionCall.args)\n              nearSwapTx.swap = {\n                method,\n                secretHash: fromBase64(args.secretHash, 'hex') as string,\n                expiration: fromNearTimestamp(args.expiration),\n                recipient: args.buyer\n              }\n              break\n            }\n\n            case 'claim': {\n              const args = fromBase64(a.FunctionCall.args)\n              nearSwapTx.swap = {\n                method,\n                secret: fromBase64(args.secret, 'hex') as string\n              }\n              break\n            }\n\n            case 'refund': {\n              nearSwapTx.swap = { method }\n              break\n            }\n\n            default: {\n              const args = fromBase64(a.FunctionCall.args)\n              nearSwapTx._raw = { ...args, method }\n              break\n            }\n          }\n        }\n      })\n    }\n  }\n  return nearSwapTx\n}\n\nexport { toBase64, fromBase64, normalizeTransactionObject, parseReceipt, toNearTimestampFormat, fromNearTimestamp }\n","module.exports = require(\"@liquality/errors\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/utils\");","module.exports = require(\"bn.js\");","module.exports = require(\"near-api-js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["BN","validateSecret","validateSecretAndHash","validateAddress","_address","address","addressToString","InvalidAddressError","length","fromBase64","str","encoding","decoded","Buffer","from","toString","JSON","parse","e","fromNearTimestamp","ts","Math","floor","normalizeTransactionObject","tx","currentHeight","normalizedTx","confirmations","status","TxStatus","Pending","blockNumber","transaction","Failure","Failed","Success","blockHash","hash","signer_id","value","_raw","transactions","Account","InMemorySigner","providers","KeyPair","keyStores","swapParams","validateValue","recipientAddress","refundAddress","validateSecretHash","secretHash","validateExpiration","expiration","toBase64","toNearTimestampFormat","parseReceipt","_tx","nearSwapTx","sender","receiver","receiver_id","actions","forEach","a","Transfer","deposit","DeployContract","code","FunctionCall","method","method_name","args","swap","recipient","buyer","secret","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}