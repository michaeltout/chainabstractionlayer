{"version":3,"file":"index.js","mappings":"8pEAAA,aACA,SAEA,SAmBA,cAGE,WAAYA,GAAZ,IACUC,EAAsDD,EAAO,QAApD,EAA6CA,EAAO,YAApDE,OAAW,IAAG,IAAAC,QAAQC,YAAYC,OAAM,E,OACzD,YAAM,CAAEJ,QAAO,EAAEC,YAAW,KAAG,KAgCnC,OArCsD,OAQ9C,YAAAI,QAAN,SAAcC,G,IAAgB,wD,0FAC5B,SAAMC,OAAOL,QAAQM,U,OACrB,OADA,SACO,CAAP,EAAOD,OAAOL,QAAQG,QAAQ,CAAEC,OAAM,EAAEG,OAAM,aAG1C,YAAAC,aAAN,SAAmBC,EAAWC,EAASC,G,YAApB,IAAAF,IAAAA,EAAA,QAAW,IAAAC,IAAAA,EAAA,QAAS,IAAAC,IAAAA,GAAA,G,4DACrC,MAAO,CAAP,EAAOC,KAAKT,QAAQ,sBAAuBM,EAAOC,EAAKC,WAGnD,YAAAE,YAAN,SAAkBC,EAAiBC,G,mEACjC,MAAO,CAAP,EAAOH,KAAKT,QAAQ,qBAAsBW,EAASC,WAG/C,YAAAC,gBAAN,SAAsBC,G,mEACpB,MAAO,CAAP,EAAOL,KAAKT,QAAQ,yBAA0B,EAAF,KAAOc,GAAW,CAAEC,MAAOD,EAAYC,MAAMC,sBAGrF,YAAAC,SAAN,SAAeC,EAAcC,G,mEAC3B,MAAO,CAAP,EAAOV,KAAKT,QAAQ,kBAAmBkB,EAAMC,WAGzC,YAAAC,oBAAN,W,mEACE,MAAO,CAAP,EAAOX,KAAKT,QAAQ,sCAGhB,YAAAqB,kBAAN,W,0FACoB,SAAMZ,KAAKJ,gB,OAC7B,MAAO,CAAP,EADkB,SACDiB,OAAS,WAE9B,EArCA,CAAsD,EAAAC,sBACpD,EAAAC,iB,wMCvBF,gBAES,EAAAC,yBAFF,W,QCAPC,EAAOC,QAAUC,QAAQ,uC,QCAzBF,EAAOC,QAAUC,QAAQ,qB,QCAzBF,EAAOC,QAAUC,QAAQ,gCCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/bitcoin-wallet-api-provider/./lib/BitcoinWalletApiProvider.ts","webpack://@liquality/bitcoin-wallet-api-provider/./lib/index.ts","webpack://@liquality/bitcoin-wallet-api-provider/external commonjs \"@liquality/bitcoin-wallet-provider\"","webpack://@liquality/bitcoin-wallet-api-provider/external commonjs \"@liquality/types\"","webpack://@liquality/bitcoin-wallet-api-provider/external commonjs \"@liquality/wallet-provider\"","webpack://@liquality/bitcoin-wallet-api-provider/webpack/bootstrap","webpack://@liquality/bitcoin-wallet-api-provider/webpack/startup"],"sourcesContent":["import { BitcoinWalletProvider } from '@liquality/bitcoin-wallet-provider'\nimport { WalletProvider } from '@liquality/wallet-provider'\nimport { BitcoinNetwork } from '@liquality/bitcoin-networks'\nimport { Address, bitcoin, SendOptions } from '@liquality/types'\nimport { PsbtInputTarget } from '@liquality/types/dist/lib/bitcoin'\n\ndeclare global {\n  interface Window {\n    bitcoin: {\n      enable: () => Promise<Address[]>\n      request: (request: { method: string; params: any[] }) => Promise<any>\n    }\n  }\n}\n\ninterface BitcoinWalletApiProviderOptions {\n  network: BitcoinNetwork\n  addressType: bitcoin.AddressType\n}\n\ntype WalletProviderConstructor<T = WalletProvider> = new (...args: any[]) => T\n\nexport default class BitcoinWalletApiProvider extends BitcoinWalletProvider(\n  WalletProvider as WalletProviderConstructor\n) {\n  constructor(options: BitcoinWalletApiProviderOptions) {\n    const { network, addressType = bitcoin.AddressType.BECH32 } = options\n    super({ network, addressType })\n  }\n\n  async request(method: string, ...params: any[]) {\n    await window.bitcoin.enable()\n    return window.bitcoin.request({ method, params })\n  }\n\n  async getAddresses(index = 0, num = 1, change = false) {\n    return this.request('wallet_getAddresses', index, num, change)\n  }\n\n  async signMessage(message: string, address: string) {\n    return this.request('wallet_signMessage', message, address)\n  }\n\n  async sendTransaction(sendOptions: SendOptions) {\n    return this.request('wallet_sendTransaction', { ...sendOptions, value: sendOptions.value.toNumber() })\n  }\n\n  async signPSBT(data: string, inputs: PsbtInputTarget[]) {\n    return this.request('wallet_signPSBT', data, inputs)\n  }\n\n  async getConnectedNetwork() {\n    return this.request('wallet_getConnectedNetwork')\n  }\n\n  async isWalletAvailable() {\n    const addresses = await this.getAddresses()\n    return addresses.length > 0\n  }\n}\n","import BitcoinWalletApiProvider from './BitcoinWalletApiProvider'\n\nexport { BitcoinWalletApiProvider }\n","module.exports = require(\"@liquality/bitcoin-wallet-provider\");","module.exports = require(\"@liquality/types\");","module.exports = require(\"@liquality/wallet-provider\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["options","network","addressType","bitcoin","AddressType","BECH32","request","method","window","enable","params","getAddresses","index","num","change","this","signMessage","message","address","sendTransaction","sendOptions","value","toNumber","signPSBT","data","inputs","getConnectedNetwork","isWalletAvailable","length","BitcoinWalletProvider","WalletProvider","BitcoinWalletApiProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}