{"version":3,"file":"index.js","mappings":"kMAAA,gBACA,SAIMA,EAAa,UAEdA,EAA4B,eAC/BA,EAA4B,aAAIA,EAAMC,YAGxCD,EAAMC,WAAa,SAAUC,GAC3B,IAAMC,EAAW,CACfD,KAAMA,EAAKE,OAAO,IAClBC,UAAWC,KAAKD,UAChBE,KAAMP,EAAMQ,SAASF,KAAKC,MAC1BE,MAAM,IAAIC,MAAOC,eAGnB,IACE,MAAM,IAAIC,MAAM,IAChB,MAAOC,GACPV,EAAIW,MAAQD,EAAMC,MAAMC,MAAM,MAE9BZ,EAAIW,MAAME,QACVb,EAAIW,MAAME,QACVb,EAAIW,MAAME,QAEVb,EAAIW,MAAQX,EAAIW,MAAMG,KAAI,SAACC,GAAe,OAAAA,EAAMC,UAG5CC,QAAgBC,UAClBD,QAAgBC,QAAU,CAAC,qBAAqB,EAAAC,UAGlDF,QAAgBC,QAAQE,KAAKpB,GAE/BH,EAA4B,aAAEwB,KAAKlB,KAAMJ,IAQlC,EAAAuB,MALK,SAACpB,GAEb,OAAOL,EADPK,EAAY,iBAAiBA,K,QCzC/BqB,EAAOC,QAAUC,QAAQ,U,+uBCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUR,KAAKE,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/debug/./lib/index.ts","webpack://@liquality/debug/external commonjs \"debug\"","webpack://@liquality/debug/webpack/bootstrap","webpack://@liquality/debug/webpack/startup"],"sourcesContent":["import _debug from 'debug'\nimport { version } from '../package.json'\n\nconst FORMAT_ARGS_BACKUP_KEY = '__formatArgs'\n// TODO: types?\nconst debug: any = _debug\n\nif (!debug[FORMAT_ARGS_BACKUP_KEY]) {\n  debug[FORMAT_ARGS_BACKUP_KEY] = debug.formatArgs\n}\n\ndebug.formatArgs = function (args: any[]) {\n  const log: any = {\n    args: args.concat([]),\n    namespace: this.namespace,\n    diff: debug.humanize(this.diff),\n    time: new Date().toISOString()\n  }\n\n  try {\n    throw new Error('')\n  } catch (error) {\n    log.stack = error.stack.split('\\n')\n\n    log.stack.shift()\n    log.stack.shift()\n    log.stack.shift()\n\n    log.stack = log.stack.map((trace: any) => trace.trim())\n  }\n\n  if (!(console as any).history) {\n    ;(console as any).history = [`@liquality/debug v${version}`]\n  }\n\n  ;(console as any).history.push(log)\n\n  debug[FORMAT_ARGS_BACKUP_KEY].call(this, args)\n}\n\nconst Debug = (namespace: string) => {\n  namespace = `liquality:cal:${namespace}`\n  return debug(namespace)\n}\n\nexport { Debug }\n","module.exports = require(\"debug\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["debug","formatArgs","args","log","concat","namespace","this","diff","humanize","time","Date","toISOString","Error","error","stack","split","shift","map","trace","trim","console","history","version","push","call","Debug","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}