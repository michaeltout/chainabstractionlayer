{"version":3,"file":"index.js","mappings":"y7DAAA,aACA,SAEMA,EAAO,IAEb,cACE,WAAYC,G,YAAA,IAAAA,IAAAA,EAAA,2CACV,YAAM,CACJC,QAASD,KACT,KA0BN,OA9BuD,OAO/C,YAAAE,QAAN,W,oGACiB,SAAMC,KAAKC,QAAQ,K,OAelC,GAfMC,EAAS,SACTC,EAAOD,EAAOC,KAEdC,EAAO,CACXC,KAAM,CACJC,IAAK,IAAI,EAAAC,UAAUJ,EAAKE,MAAMG,IAAIZ,GAAMa,GAAG,GAAGC,YAEhDC,QAAS,CACPL,IAAK,IAAI,EAAAC,UAAUJ,EAAKS,UAAUJ,IAAIZ,GAAMa,GAAG,GAAGC,YAEpDG,KAAM,CACJP,IAAK,IAAI,EAAAC,UAAUJ,EAAKU,MAAML,IAAIZ,GAAMa,GAAG,GAAGC,aAI9CI,OAAOC,QAAQX,GAAMY,MAAK,SAAC,GAAY,OAAN,KAAUV,IAAM,OAEnD,MAAM,IAAIW,MAAM,gCAGlB,MAAO,CAAP,EAAOb,WAEX,EA9BA,CAAuD,EAAAc,c,yMCLvD,gBAES,EAAAC,0BAFF,W,QCAPC,EAAOC,QAAUC,QAAQ,6B,QCAzBF,EAAOC,QAAUC,QAAQ,sBCCrBC,EAA2B,GCE3BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,IAOV,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,QClBWI,CAAoB,K","sources":["webpack://@liquality/ethereum-gas-now-fee-provider/./lib/EthereumGasNowFeeProvider.ts","webpack://@liquality/ethereum-gas-now-fee-provider/./lib/index.ts","webpack://@liquality/ethereum-gas-now-fee-provider/external commonjs \"@liquality/node-provider\"","webpack://@liquality/ethereum-gas-now-fee-provider/external commonjs \"@liquality/types\"","webpack://@liquality/ethereum-gas-now-fee-provider/webpack/bootstrap","webpack://@liquality/ethereum-gas-now-fee-provider/webpack/startup"],"sourcesContent":["import { NodeProvider } from '@liquality/node-provider'\nimport { FeeProvider, FeeDetails, BigNumber } from '@liquality/types'\n\nconst GWEI = 1e9\n\nexport default class EthereumGasNowFeeProvider extends NodeProvider implements FeeProvider {\n  constructor(endpoint = 'https://www.gasnow.org/api/v3/gas/price') {\n    super({\n      baseURL: endpoint\n    })\n  }\n\n  async getFees(): Promise<FeeDetails> {\n    const result = await this.nodeGet('')\n    const data = result.data\n\n    const fees = {\n      slow: {\n        fee: new BigNumber(data.slow).div(GWEI).dp(0).toNumber()\n      },\n      average: {\n        fee: new BigNumber(data.standard).div(GWEI).dp(0).toNumber()\n      },\n      fast: {\n        fee: new BigNumber(data.fast).div(GWEI).dp(0).toNumber()\n      }\n    }\n\n    if (Object.entries(fees).find(([, fee]) => fee.fee > 1000)) {\n      // Guard against fees higher than 1000 GWEI\n      throw new Error('Fee over 1000 Gwei detected.')\n    }\n\n    return fees\n  }\n}\n","import EthereumGasNowFeeProvider from './EthereumGasNowFeeProvider'\n\nexport { EthereumGasNowFeeProvider }\n","module.exports = require(\"@liquality/node-provider\");","module.exports = require(\"@liquality/types\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(175);\n"],"names":["GWEI","endpoint","baseURL","getFees","this","nodeGet","result","data","fees","slow","fee","BigNumber","div","dp","toNumber","average","standard","fast","Object","entries","find","Error","NodeProvider","EthereumGasNowFeeProvider","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}